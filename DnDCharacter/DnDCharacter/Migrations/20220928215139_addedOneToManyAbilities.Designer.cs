// <auto-generated />
using DnDCharacter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DnDCharacter.Migrations
{
    [DbContext(typeof(CharacterContext))]
    [Migration("20220928215139_addedOneToManyAbilities")]
    partial class addedOneToManyAbilities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DnDCharacter.Models.Abilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterAbilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Charisma = 0,
                            Constitution = 0,
                            Dexterity = 0,
                            Intelligence = 0,
                            Strength = 0,
                            Wisdom = 0
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Charisma = 0,
                            Constitution = 0,
                            Dexterity = 0,
                            Intelligence = 0,
                            Strength = 0,
                            Wisdom = 0
                        },
                        new
                        {
                            Id = 3,
                            CharacterId = 3,
                            Charisma = 0,
                            Constitution = 0,
                            Dexterity = 0,
                            Intelligence = 0,
                            Strength = 0,
                            Wisdom = 0
                        });
                });

            modelBuilder.Entity("DnDCharacter.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Allignment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experiance")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Initiative")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allignment = "Neutral Good",
                            ArmorClass = 30,
                            Background = "Entertainer",
                            Class = "Fighter",
                            Experiance = 0,
                            HitPoints = 30,
                            Initiative = 3,
                            Level = 0,
                            Name = "Bob",
                            PartyId = 1,
                            PlayerName = "John",
                            ProficiencyBonus = 2,
                            Race = "Orc",
                            Speed = 30
                        },
                        new
                        {
                            Id = 2,
                            Allignment = "Lawful Good",
                            ArmorClass = 30,
                            Background = "Far Traveler",
                            Class = "Paladin",
                            Experiance = 250,
                            HitPoints = 30,
                            Initiative = 2,
                            Level = 2,
                            Name = "Jedidia",
                            PartyId = 1,
                            PlayerName = "Chris",
                            ProficiencyBonus = -1,
                            Race = "Human",
                            Speed = 30
                        },
                        new
                        {
                            Id = 3,
                            Allignment = "Chaotic Evil",
                            ArmorClass = 30,
                            Background = "Soldier",
                            Class = "Warlock",
                            Experiance = 150,
                            HitPoints = 30,
                            Initiative = 1,
                            Level = 5,
                            Name = "Keb",
                            PartyId = 2,
                            PlayerName = "Mat",
                            ProficiencyBonus = 5,
                            Race = "Tiefling",
                            Speed = 30
                        });
                });

            modelBuilder.Entity("DnDCharacter.Models.CharacterInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterInventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 150,
                            CharacterId = 1,
                            ItemName = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 250,
                            CharacterId = 2,
                            ItemName = "Gold"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 350,
                            CharacterId = 3,
                            ItemName = "Gold"
                        });
                });

            modelBuilder.Entity("DnDCharacter.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("parties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "There can only be one"
                        },
                        new
                        {
                            Id = 2,
                            Name = "well there can be another"
                        });
                });

            modelBuilder.Entity("DnDCharacter.Models.Abilities", b =>
                {
                    b.HasOne("DnDCharacter.Models.Character", "Character")
                        .WithOne("CharacterAbilities")
                        .HasForeignKey("DnDCharacter.Models.Abilities", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("DnDCharacter.Models.Character", b =>
                {
                    b.HasOne("DnDCharacter.Models.Party", "Party")
                        .WithMany("Characters")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("DnDCharacter.Models.CharacterInventory", b =>
                {
                    b.HasOne("DnDCharacter.Models.Character", "Character")
                        .WithOne("CharacterInventory")
                        .HasForeignKey("DnDCharacter.Models.CharacterInventory", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("DnDCharacter.Models.Character", b =>
                {
                    b.Navigation("CharacterAbilities")
                        .IsRequired();

                    b.Navigation("CharacterInventory")
                        .IsRequired();
                });

            modelBuilder.Entity("DnDCharacter.Models.Party", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
